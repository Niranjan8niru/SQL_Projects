-- Data Cleaning

select * from world_layoffs.layoffs;

-- 1 Remove Duplicates
-- 2 Standadize the data
-- 3 Blank or Null Values
-- 4 Remove Any columns/Rows

-- Create staging table
CREATE TABLE world_layoffs.layoffs_staging
LIKE world_layoffs.layoffs;

insert world_layoffs.layoffs_staging select * from world_layoffs.layoffs;


with Duplicate_row as(
select *,
row_number() over(partition by company,location,industry,total_laid_off,percentage_laid_off,'date',stage,country,funds_raised_millions) as row_num
from world_layoffs.layoffs_staging
)
select * from Duplicate_row 
where row_num>1;

-- We can directly delete with Row num  in MySQL hence we are creating a new table and inserting the row number and then delete the duplicates accordingly

CREATE TABLE `layoffs_staging2` (
  `company` text,
  `location` text,
  `industry` text,
  `total_laid_off` int DEFAULT NULL,
  `percentage_laid_off` text,
  `date` text,
  `stage` text,
  `country` text,
  `funds_raised_millions` int DEFAULT NULL,
  `row_num` INT
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

insert layoffs_staging2  
select *,
row_number() over(partition by company,location,industry,total_laid_off,percentage_laid_off,'date',stage,country,funds_raised_millions) as row_num
from world_layoffs.layoffs_staging;

delete from layoffs_staging2
where row_num>1;

-- Standadizing the data
Select * from layoffs_staging2;

Select company, TRIM(company) from layoffs_staging2;

-- Removing the spaces using TRIM
update layoffs_staging2
SET company=TRIM(company);

select Distinct(company) from layoffs_staging2;

Select distinct(country) from layoffs_staging2 order by 1; 

-- Removing Trailing . from column
update layoffs_staging2 
SET country='United States'
where country='United States.';

-- OR another method using trsiling
Select country, TRIM(TRAILING '.' from country) from layoffs_staging2;

-- Converting date column to standard format YYYY-MM-DD

select `date`,
STR_TO_DATE(`date`,'%m/%d/%Y')
from layoffs_staging2;

Update layoffs_staging2
SET `date`= STR_TO_DATE(`date`,'%m/%d/%Y');

ALTER table layoffs_staging2
MODIFY  COLUMN `date` DATE;

Select * from layoffs_staging2
where percentage_laid_off is NULL and 
total_laid_off is NULL;

Select * from layoffs_staging2
where industry is NULL or industry='';


Select * from layoffs_staging2
where company='Airbnb';

-- Updating null or blank values

update layoffs_staging2
SET industry= null where industry='';

select t1.industry,t2.industry
from layoffs_staging2 t1 JOIN 
layoffs_staging2 t2 on
t1.company=t2.company 
WHERE (t1.industry is NULL or t1.industry='')
and t2.industry is not null;

update layoffs_staging2 t1
JOIN layoffs_staging2 t2 on
t1.company=t2.company 
SET t1.industry=t2.industry where (t1.industry is NULL or t1.industry='')
and t2.industry is not null;

Select * from layoffs_staging2
where percentage_laid_off is NULL and 
total_laid_off is NULL;

delete from layoffs_staging2
where percentage_laid_off is NULL and 
total_laid_off is NULL;

Alter table layoffs_staging2
DROP Column row_num
